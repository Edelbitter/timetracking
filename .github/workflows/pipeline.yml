name: FE Docker Image CI

on:
  push:
    tags: 
      - v** 

jobs:

  build-and-push-fe:

    runs-on: ubuntu-latest
    steps:
    - name: checkout repo
      uses: actions/checkout@v3
        
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
       registry: ghcr.io
       username: ${{ github.actor }}
       password: ${{ secrets.GITHUB_TOKEN }}    

    - name: Build and push frontend image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        file: ./BlazorApp1/Dockerfile
        tags: ghcr.io/edelbitter/timetracking-fe:${{ github.ref_name }}

  build-and-push-be:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
        
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          file: ./TimeTrackingBE/Dockerfile
          tags: ghcr.io/edelbitter/timetracking-be:${{ github.ref_name }}
          

  test-ssh:
    needs: [build-and-push-be,build-and-push-fe]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: copy files via scp
        uses: appleboy/scp-action@master
        with:
          host: 51.158.164.26
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "ci-cd/k8s/backend-pod.yaml,ci-cd/k8s/backend-svc.yaml,ci-cd/k8s/frontend-pod.yaml,ci-cd/k8s/frontend-svc.yaml"
          target: "/usr/local/src"

      - name: connect and kubectl apply
        uses: appleboy/ssh-action@master
        with:
          host: 51.158.164.26
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: kubectl apply -f /usr/local/src